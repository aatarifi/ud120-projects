# -*- coding: utf-8 -*-
"""
Created on Sun Oct  7 03:06:04 2018

@author: Ahmad
"""

#Feature_Scaling_Formula_Ahmad

# Lesson 10 _ 10

def featureScaling(arr):
    
    data_list = arr
    x_max = float(max(data_list))
    x_min = float(min(data_list))
    rescaled_list = []
    
    for i in data_list:
      try:   
    
          x_prime = ((i - x_min) / (x_max - x_min))
          rescaled_list.append(x_prime)
          
      except ZeroDivisionError:
          print "zerrrro"
          
          x_prime = 0.5
          rescaled_list.append(x_prime)
    return rescaled_list

# tests of your feature scaler--line below is input data
data = [115, 115, 115]
print featureScaling(data)

##  OR another way of handeling the zero problem Ahmad is as follow:
## Also check how we get them float as well right from the list

data = [115., 140., 175.]
#data = [365788.0, 267102.0, 170941.0, 0.0, 243293.0, 267093.0, 0.0, 370448.0, 0.0, 197091.0, 130724.0, 288589.0, 248546.0, 257486.0, 0.0, 0.0, 288542.0, 251654.0, 288558.0, 63744.0, 0.0, 357091.0, 271442.0, 0.0, 304110.0, 187922.0, 213625.0, 249201.0, 0.0, 231330.0, 182245.0, 211788.0, 0.0, 0.0, 224305.0, 273746.0, 339288.0, 216582.0, 210500.0, 272880.0, 477.0, 0.0, 269076.0, 428780.0, 211844.0, 0.0, 206121.0, 174246.0, 510364.0, 365038.0, 365163.0, 162779.0, 0.0, 236457.0, 1072321.0, 261516.0, 329078.0, 0.0, 184899.0, 192008.0, 263413.0, 262663.0, 0.0, 0.0, 374125.0, 278601.0, 0.0, 199157.0, 0.0, 96840.0, 80818.0, 213999.0, 210692.0, 222093.0, 440698.0, 0.0, 240189.0, 420636.0, 275101.0, 314288.0, 94941.0, 239502.0, 1111258.0, 0.0, 0.0, 6615.0, 655037.0, 404338.0, 0.0, 259996.0, 317543.0, 0.0, 201955.0, 248146.0, 0.0, 0.0, 0.0, 76399.0, 262788.0, 0.0, 261809.0, 248017.0, 0.0, 229284.0, 231946.0, 221003.0, 158403.0, 0.0, 250100.0, 492375.0, 1060932.0, 261879.0, 239671.0, 0.0, 304588.0, 309946.0, 85274.0, 247338.0, 349487.0, 330546.0, 415189.0, 265214.0, 278601.0, 274975.0]
#data = [6680544.0, 4890344.0, 5538001.0, 1104054.0, 880290.0, 2282768.0, 765313.0, 1056320.0, 185063.0, 4346544.0, 81042.0, 1441898.0, 1465734.0, 1635238.0, 601438.0, 4158995.0, 1624396.0, 2027865.0, 436515.0, 4046157.0, 607837.0, 1835558.0, 1624396.0, 17378.0, 3282960.0, 1623010.0, 2291113.0, 1362375.0, 2549361.0, 34348384.0, 1637034.0, 83237.0, 506765.0, 187500.0, 608750.0, 664461.0, 7509039.0, 1599641.0, 953136.0, 1451869.0, 4452476.0, 19794175.0, 850010.0, 117551.0, 5266578.0, 19250000.0, 28798.0, 2022048.0, 1668260.0, 1297049.0, 1729541.0, 281073.0, 4160672.0, 8191755.0, 825464.0, 400478.0, 636246.0, 8308552.0, 1550019.0, 8831913.0, 10433518.0, 15364167.0, 940257.0, 671737.0, 2165172.0, 591250.0, 2070306.0, 2542813.0, 3181250.0, 765920.0, 384728.0]
for i in data:
    print i
    
def featureScaling(arr):
    
    data_list = arr
    x_max = max(data_list)
    x_min = min(data_list)
    rescaled_list = []
    
    for i in data_list:

      if  x_max - x_min > 0.0:
          x_prime = ((i - x_min) / (x_max - x_min))
          rescaled_list.append(x_prime)
      if  x_max - x_min == 0:
          x_prime = 0.5
          rescaled_list.append(x_prime)
    return rescaled_list    
print featureScaling(data)

